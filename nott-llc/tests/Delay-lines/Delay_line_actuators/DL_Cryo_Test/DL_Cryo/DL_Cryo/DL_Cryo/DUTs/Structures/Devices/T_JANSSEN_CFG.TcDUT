<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <DUT Name="T_JANSSEN_CFG" Id="{83c43921-a743-4efb-87b7-6a9bd010857c}">
    <Declaration><![CDATA[TYPE T_JANSSEN_CFG EXTENDS T_RS_BASE_CFG :
STRUCT
	
    //
	// List of Monitoring commands in PRE-OPERATION.
	// Executed before the Positioner has been Referenced/initialised.
	//
	{attribute 'OPC.UA.DA' := '0'}
	cmdList_NOT_READY:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [
							(cmd := 'GFS 1',     	nReplies := 1),
							(cmd := 'GFS 2',     	nReplies := 1),
							(cmd := 'GFS 3',     	nReplies := 1),
							(cmd := 'FBXT', 		nReplies := 1),
							(cmd := 'STP 1', 		nReplies := 1),
							(cmd := 'STP 2', 		nReplies := 1),
							(cmd := 'STP 3', 		nReplies := 1),
							(cmd := '', 			nReplies := 0),
							(cmd := '', 			nReplies := 0)];
	//
	// INIT commands.
	// Executed during Initialisation, before going to OPERATIONAL.
	//
	{attribute 'OPC.UA.DA' := '0'}
	cmdList_Init:	ARRAY [0..7] OF T_JANSSEN_COMMAND := [							
							(cmd := '/GBR USB', 	nReplies := 1),
							(cmd := '', 			nReplies := 0)];

	//
	// List of commands to SET Channel/Positioner Configuration.
	// Note the # and *** characters !!!
	// The actual command will be set like this:
	//    #   will be replaced with channel number
	//    *** will be replaced with a value
	// Example:
	//    ':CHAN#:PCON:OPT ***' => ':CHAN1:PCON:OPT 256'
	//
	// Important NOTE:
	// At this stage RLIM:MIN and RLIM:MAX are disabled, i.e. = 0.
	// The actual limits will be set at the E_SA_POS_SM_STATE.CALIB_REF stage,
	// see M_SetCmdList().
	//
	// These commands are sent only once, just before the positioner is 
	// commanded to Reference (INIT).
	//
	{attribute 'OPC.UA.DA' := '0'}
	cmdList_CfgSet:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [						
							(cmd := '/GBR RS422', 			nReplies := 1),
							(cmd := '/MODLIST', 			nReplies := 1),
							(cmd := 'FBXT', 				nReplies := 1),
							(cmd := 'STP 1', 				nReplies := 1),
							(cmd := 'STP 2', 				nReplies := 1),
							(cmd := 'STP 3', 				nReplies := 1),
							(cmd := 'MLS 4 1', 				nReplies := 1), // Get calibration values
							(cmd := 'MLS 4 2', 				nReplies := 1), // Get calibration values
							(cmd := 'MLS 4 3', 				nReplies := 1), // Get calibration values
							(cmd := 'FBST', 				nReplies := 1), //// Get status position control
							//(cmd := '/VER', 		nReplies := 1),
							//(cmd := 'FBEN CBS10-RLS 300 CBS10-RLS 300 CBS10-RLS 300 1 293', 	nReplies := 1),
							(cmd := '', 					nReplies := 0),			
							//(cmd := ':CHAN#:INP:THR ***', 		nReplies := 0),							
							//(cmd := ':CHAN#:RLIM:MIN 0', 		nReplies := 0),
							(cmd := '', 		nReplies := 0)];
							

	//				
	// List of commands to GET Channel/Positioner Configuration.
	// These commands are sent from the moment the SW started till the positioner 
	// has been Calibrated or Referenced (INIT).
	// Once the Positioer is Ready, these commans are not sent any more.
	//
	{attribute 'OPC.UA.DA' := '0'}
	cmdList_POST_INIT:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [							
							(cmd := '/VER', 		nReplies := 1),
							(cmd := '', 		nReplies := 0)];
							

	

	//
	// List of Monitoring commands in OPERATION.
	// Executed once the Positioner has been Referenced/initialised.
	//
	{attribute 'OPC.UA.DA' := '0'}
	cmdList_Mon:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [
							(cmd := 'GFS 1', 	nReplies := 1),
							(cmd := 'GFS 2', 	nReplies := 1),
							(cmd := 'GFS 3', 	nReplies := 1),
							(cmd := 'FBST', 	nReplies := 1),
							(cmd := 'CGVA 4', 	nReplies := 1),						
							(cmd := '', 		nReplies := 0)];
							
	// Janssen controller flex drive mode
	//Command EXT [ADDR] [DIR] [FREQ] [RSS] [TEMP] [STAGE] [DF]
	cmdList_enable_flex_drive:		ARRAY [0..15] OF T_JANSSEN_COMMAND := [
										(cmd := 'EXT 1 1 600 100 293 CLA2601 1', 	nReplies := 1),						
										(cmd := '', 		nReplies := 0)];
	//Disable flex drive
	//Command FBXT
	//Response (example) Control loop disabled.
	cmdList_disable_flex_drive:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [
										(cmd := 'STP 1', 	nReplies := 1),
										(cmd := 'STP 2', 	nReplies := 1),
										(cmd := 'STP 3', 	nReplies := 1),						
										(cmd := '', 		nReplies := 0)];

	// Janssen controller Servo Drive Mode
	// Command FBEN [STAGE1] [FREQ1] [STAGE2] [FREQ2] [STAGE3] [FREQ3] [DF] [TEMP]		
	cmdList_enable_servo_drive:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [
								(cmd := 'FBEN CBS10-RLS 300 CBS10-RLS 300 CBS10-RLS 300 1 293', 	nReplies := 1),						
								(cmd := '', 		nReplies := 0)];
								
	//Disable servo drive
	//Command FBXT
	//Response (example) Control loop disabled.
	cmdList_disable_servo_drive:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [
								(cmd := 'FBXT', 	nReplies := 1),
								(cmd := 'STP 1', 	nReplies := 1),
								(cmd := 'STP 2', 	nReplies := 1),
								(cmd := 'STP 3', 	nReplies := 1),						
								(cmd := '', 		nReplies := 0)];
	
	// 3 positioners are Moving to their respective set points in Servo Drive Mode
	//Command FBCS [SP1] [ABS] [SP2] [ABS] [SP3] [ABS]
	//Command (example, SP in [m]) FBCS -1e-3 0 1e-3 1 1.23e-4 1
	//Command (example, SP in [rad]) FBCS 6.28 0 0 0 0 0
	//Response (example) Control loop setpoints set.
	
	cmdList_moving_to_setpoint:	ARRAY [0..15] OF T_JANSSEN_COMMAND := [
								(cmd := 'FBCS -1e-3 0 1e-3 1 1.23e-4 1', 	nReplies := 1),						
								(cmd := '', 		nReplies := 0)];
								
	// Emergency stop to halt the positioners
	cmdList_emergency_stop: ARRAY [0..15] OF T_JANSSEN_COMMAND := [
								(cmd := 'FBES', 	nReplies := 1),						
								(cmd := '', 		nReplies := 0)];
								
	// CSZ – Reset current counter value to zero
	//Command CSZ [ADDR] [CH]
	//Command (example) CSZ 4 1
	//Response (example) Position counter set to 0.
	cmdList_reset_counter_to_zero: ARRAY [0..15] OF T_JANSSEN_COMMAND := [
								(cmd := 'CSZ 4 1', 	nReplies := 1),						
								(cmd := '', 		nReplies := 0)];

	//
	// Array of used channels. Set to TRUE for each used channel.
	// 18 channels max. 6 modules [0..5], 3 connections each [CH1, CH2, CH3].
	// channel = (Module x 3) + (CH-1)
	// For example:
	//   First connection (CH1) of first module (Module0): channel = 0 x 3 + (1-1) = 0
	//   Second connection (CH2) of first module (Module0): channel = 0 x 3 + (2-1) = 1
	//   Third connection (CH3) of third module (Module2): channel = 2 x 3 + (3-1) = 8
	//  
	arrUsedCh:	ARRAY [0..17] 	OF BOOL;	

	//
	// Array of used modules. Set to TRUE for each used module.
	// Automatically populated in method M_Configure().
	//
	arrUsedMod:	ARRAY [0..5] 	OF BOOL;	
	
	// Channel configuration structures
//	arrChCfg:	ARRAY [0..17] OF T_SA_CH_CFG;		

(*
	JANSSEN_GET_BR:		STRING(10) := '/GBR RS422';
	JANSSEN_GET_VER:	STRING(8) := '/VER';
	JANSSEN_MODLIST:	STRING(8) := '/MODLIST';
	//CCC_CMD_GET_VERS:	STRING(8) := '>00V??';
	CCC_CMD_GET_VERS:	STRING(8) := '/GBR';
	//CCC_CMD_RESET:		STRING(8) := '>00u??';
	CCC_CMD_RESET:		STRING(8) := '/GBR';
	CCC_CMD_GET_TEMP:	STRING(8) := '>00H??';
	CCC_CMD_GET_FLOW:	STRING(8) := '>00f??';
	//CCC_CMD_GET_STAT:	STRING(8) := '>00o??';
	CCC_CMD_GET_STAT:	STRING(8) := '/GBR';
	CCC_CMD_SET_HOST:	STRING(8) := '>00J??';
	CCC_CMD_SET_THST:	STRING(8) := '>00T??';
	CCC_CMD_SET_TAMB:	STRING(8) := '>00t??';

	(* List of INIT commands *)
	cmdList_Init:	ARRAY [1..4] OF T_JANSSEN_COMMAND := [
							//(cmd := CCC_CMD_RESET, 		nValues := 4),
							//(cmd := CCC_CMD_GET_VERS, 	nValues := 4),
							//(cmd := CCC_CMD_RESET, 		nValues := 0),
							//(cmd := CCC_CMD_GET_VERS, 	nValues := 0),
							//(cmd := JANSSEN_GET_BR, 	nValues := 4),
							//(cmd := '', 				nValues := 0),
							(cmd := '', 				nValues := 0),
							(cmd := '', 				nValues := 0),
							(cmd := '', 				nValues := 0),
							(cmd := '', 				nValues := 0)];


	(*	List of READ commands *)
	cmdList_Read:	ARRAY [1..4] OF T_JANSSEN_COMMAND := [
							//(cmd := CCC_CMD_GET_STAT, 	nValues := 5), (* 5 bytes *)
							//(cmd := CCC_CMD_GET_TEMP, 	nValues := 5), (* 5 words = 10 bytes*)
							//(cmd := CCC_CMD_GET_FLOW, 	nValues := 3), (* 3 words = 6 bytes *)
							//(cmd := JANSSEN_GET_BR, 	nValues := 4),
							(cmd := '/GBR RS422',       nValues := 1),
							(cmd := '/GBR USB', 		nValues := 1),
							(cmd := '', 				nValues := 0),
							(cmd := '', 				nValues := 0)];
		*)
					

END_STRUCT
END_TYPE]]></Declaration>
  </DUT>
</TcPlcObject>