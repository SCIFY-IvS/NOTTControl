<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <DUT Name="T_RS_BASE_STAT" Id="{0ee6c61a-75da-4641-a0a0-81dd86401c35}">
    <Declaration><![CDATA[TYPE T_RS_BASE_STAT :
STRUCT
	bInitialised:	BOOL 	:= FALSE;		// Flag if device is initialised
	bConfigured:	BOOL 	:= FALSE;		// Flag if device is configured
	bLocal:			BOOL	:= FALSE;		// Device operated from PLC GUI
	bSimulation:	BOOL	:= FALSE;		// Device simulated
	bAutoStarted:	BOOL	:= FALSE;		// Device has already automatically got to OP state
	bActive:		BOOL	:= FALSE;		// Device has passed first 100 cycles
	bCmdActive:		BOOL 	:= FALSE;		// Flag if there are SET commands to be executed.
	bWaitUpdate:	BOOL 	:= FALSE;		// Flag if system waits for the update of status.
	bStatUpdated:	BOOL 	:= FALSE;		// Flag if status has been updated after SET commands.

	nState:			E_RS_BASE_STATE		:= E_RS_BASE_STATE.NOTOP;			
	nSubstate:		E_RS_BASE_SUBSTATE	:= E_RS_BASE_SUBSTATE.NOTOP_NOTREADY;

	nCycleCounter:	UDINT	:= 0;							// Alive flag
	nErrorCode: 	E_SM_ERROR 		:= E_SM_ERROR.OK;		(* Error code *)
	nLastCommand:	E_RS_COMMAND	:= E_RS_COMMAND.NONE;	(* Last command sent to the device *)
	nStatus: 		E_SM_STATUS		:= E_SM_STATUS.OK; 		(* Device status *)
	nRpcErrorCode: 	E_RS_RPC_ERROR 	:= E_RS_RPC_ERROR.OK;	(* RPC Error code *)

	sState:			STRING	:= 'NOT OP';					(* State textual description *)
	sSubstate:		STRING	:= 'NOT READY';					(* Substate textual description *)
	sErrorText: 	STRING 	:= 'OK'; 						(* Error text *)
	sRpcErrorText: 	STRING 	:= 'OK'; 						(* RPC Error text *)
	sStatus: 		STRING 	:= 'OK'; 						(* Status in textual form, e.g. 'OFF' *)
	sLastCommand:	STRING	:= 'NONE';						(* Last command, as string, sent to the device *)
	
	sActionDesc:	STRING	:= '';
	sEventDesc:		STRING	:= '';
END_STRUCT
END_TYPE]]></Declaration>
  </DUT>
</TcPlcObject>